<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_card</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//value = 1;
//startx = x;
//starty = y;

// pitcher, fielder or batter deck
player = noone;
//drop_target = noone; //instance_find(obj_pitch_deck,0);

//drop_targets = noone;
/*
drop_targets = ds_list_create();
var pitch_deck = instance_find(obj_pitch_deck,0);
if( pitch_deck != noone &amp;&amp; !scr_contains(pitch_deck, drop_targets) &gt; -1 ) {
    ds_list_add(drop_targets, pitch_deck );
}

with(ds_list_find_value( drop_targets,0 )) {
    show_debug_message("This DRAG TARGETS = " + string(id));
}
*/


image_index = 0; //irandom_range(1,52);
image_speed = 0;


rank = scr_card_rank(value); // mod 13;
suit = scr_card_suit(value); // div 13;

/*
show_debug_message("index: " + string(image_index)
                   + " rank: " + string(rank) 
                   + " " + suit);
 */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if( image_index != value ) 
{
    //show_debug_message(" my Value changed..the old image_index was: " + string(image_index) + " the new value is = " + string(value));
    image_index = value;
    rank = scr_card_rank(value); // mod 13;
    suit = scr_card_suit(value); // div 13;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( global.card != noone &amp;&amp; global.drop_targets != noone) {
    var i;
    var len = array_length_1d(global.drop_targets);
    var onTarget = noone;
    
    with( global.card) {
        for( i=0; i &lt; len; i++) {
            if( position_meeting( mouse_x, mouse_y, global.drop_targets[i] )) {
                onTarget = global.drop_targets[i];
                break;
            }
        }
        
        if(onTarget != noone) {
            //convert the deck image to be the card we just had
            with(onTarget) {
                value = global.card.value;
                sprite_index = spr_card;
                image_index = value;
            }
            //Make the global.card image index invisible
            value = 53;
            x = startx;
            y = starty;
            depth = -1;
        } else {
            //restore card to the local position
            x = startx;
            y = starty;
            depth = -1;
        }
        /* 
        old logic    
        if( position_meeting( mouse_x, mouse_y, drop_target ) ) {
            with( drop_target ) {
                image_index = global.card.value;
                value = global.card.value;
            }
            with(global.card) {
                instance_destroy();
            }
        } else {
            with( global.card ) {
                x = startx;
                y = starty;
                depth = -1;
            }
        }
        */
    }
    global.card = noone;
    
    //console();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drop the card
/*
if( position_meeting( mouse_x, mouse_y, drop_target ) ) {
    with( drop_target ) {
        sprite_index = global.card.sprite_index;  
    }
    
    with(global.card) {
        instance_destroy();
    }
} else {
    with(global.card) {
        x = startx;
        y = starty;
    }
}

show_debug_message("Releasing the card");
global.card = noone;
depth = -1;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///allow card to be selected if it is currently valid

if( scr_has_valid_turn(id) &amp;&amp; 
    ( value &gt; 0 &amp;&amp; value &lt; 53 ) &amp;&amp; // 0 &amp; 53 are card back and transparent respectively
    scr_has_valid_target(id) )  { 
    
        global.card = id;
        depth = -10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(global.debug) {
    var dbg_deck = 0;
    
    switch(player) {
        case PITCHER: dbg_deck = 1; break;
        case FIELDER: dbg_deck = 2; break;
        case BATTER:  dbg_deck = 4; break;    
    }
    
    draw_sprite(spr_debug, dbg_deck, x, y);
}

//debug printing
/*

if( image_index != value ) 
{
    image_index = value;
    var factors = scr_factors(value);
    show_debug_message("factors = " + string(factors));
}

*/

/*
if( global.card != noone) {
draw_set_color(c_black);
draw_rectangle(0,room_height,string_width(txt), room_height-string_height(txt), false);
draw_set_color(c_white);
draw_text(0,room_height-string_height(txt),txt);
}

*/
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
