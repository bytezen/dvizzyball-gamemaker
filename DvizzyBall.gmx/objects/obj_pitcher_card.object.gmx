<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_card</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_card</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>value = 0;
//image_index = value;

startx = x;
starty = y;

// pitcher, fielder or batter deck
player = PITCHER;
//under which players's turns can this card be selected
valid_turns = ds_list_create();
ds_list_add(valid_turns, PITCHER); 
ds_list_add(valid_turns, FIELDER);
//valid_turns[0] = PITCHER; //TURN.pitch;
//valid_turns[1] = FIELDER; //TURN.defense;

//where can this card be dropped
valid_targets = ds_list_create();
ds_list_add(valid_targets, instance_find(obj_pitch_deck,0));
ds_list_add(valid_targets, instance_find(obj_fielder_deck,0));

//valid_targets[0] = instance_find(obj_pitch_deck, 0); //DROP_TARGET.pitcher;
//valid_targets[1] = instance_find(obj_fielder_deck, 0);

//valid_targets[2] = DROP_TARGET.first_base;
//valid_targets[3] = DROP_TARGET.second_base;
//valid_targets[4] = DROP_TARGET.third_base;
//valid_targets[5] = DROP_TARGET.home_base;



//drop_target = noone; //instance_find(obj_pitch_deck,0);

//drop_targets = noone;
/*
drop_targets = ds_list_create();
var pitch_deck = instance_find(obj_pitch_deck,0);
if( pitch_deck != noone &amp;&amp; scr_contains(pitch_deck, drop_targets) &lt; 0 ) {
    ds_list_add(drop_targets, pitch_deck );
}

with(ds_list_find_value( drop_targets,0 )) {
    show_debug_message("This DRAG TARGETS = " + string(id));
}
*/


image_index = 0;//value; //irandom_range(1,52);
image_speed = 0;


//rank = scr_card_rank(value); // mod 13;
//suit = scr_card_suit(value); // div 13;

/*
show_debug_message("index: " + string(image_index)
                   + " rank: " + string(rank) 
                   + " " + suit);
 */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(global.debug) {
    var dbg_deck = 0;
    
    switch(player) {
        case PITCHER: dbg_deck = 1; break;
        case FIELDER: dbg_deck = 2; break;
        case BATTER:  dbg_deck = 4; break;    
    }
    
    draw_sprite(spr_debug, dbg_deck, x, y);
}

//debug printing
/*

if( image_index != value ) 
{
    image_index = value;
    var factors = scr_factors(value);
    show_debug_message("factors = " + string(factors));
}

*/

/*
if( position_meeting(x, y, drop_target) ) {
    txt = "over target";
} else {
    txt = "not over target";
}
if( global.card != noone &amp;&amp; global.card.object_index == obj_pitcher_card) {
draw_set_color(c_black);
draw_rectangle(0,room_height,string_width(txt), room_height-string_height(txt), false);
draw_set_color(c_white);
draw_text(0,room_height-string_height(txt),txt);
}
*/
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
